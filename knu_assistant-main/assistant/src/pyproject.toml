[tool.poetry]
name = "knu_assistant"
version = "0.2.0"
description = ""
authors = ["Evgeniy Goncharenko <iterlace@gmail.com>"]
license = "BSD 2-Clause License"
packages = [
    { include = "app" },
    { include = "migrations" },
]

[tool.poetry.scripts]
run-bot = "app.bot.worker:run"
apply-migrations = "migrations.apply:run"

[tool.poetry.dependencies]
python = "^3.9"
python-telegram-bot = "13.7"
alembic = "1.7.4"
environs = "9.3.4"
requests = "2.26.0"
aiohttp = "3.7.3"
urllib3 = "1.26.7"
psycopg2-binary = "2.9.1"
sentry-sdk = {version = "^1.4.3", extras = ["pure_eval"]}
celery = {version = "5.1.2", extras = ["redis"]}
SQLAlchemy = {version = "^1.4.5"}
pydantic = "^1.8.2"

[tool.poetry.dev-dependencies]
pytest = "^6.2.5"
mock = "4.0.3"
pytest-asyncio = "0.15.1"
mypy = "^0.910"
black = "^21.8b0"
isort = "^5.9.3"
autoflake = "^1.4"
flake8 = "^3.9.2"
SQLAlchemy = {version = "^1.4.5", extras = ["mypy"]}
telethon = "^1.23.0"
factory-boy = "^3.2.0"
pytest-mock = "^3.6.1"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[flake8]
max-line-length = 88
exclude = [".git", "__pycache__", "__init__.py", ".mypy_cache", "migrations", ".pytest_cache", "venv", ".venv"]

[tool.isort]
profile = "black"
src_paths = ["assistant", "bot", "tasks", "timetable_scrapper"]
sections = ["FUTURE", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]
line_length = 88
group_by_package = true
skip_glob = "*/migrations/*,*/venv/*,*/.venv/*,*/__init__.py"
skip = ["migrations"]

[tool.black]
exclude = ".venv|venv|.git|__pycache__|__init__.py|.mypy_cache|.pytest_cache|migrations"
# skip-string-normalization = true
line_length = 88

[tool.pytest.ini_options]
python_files = "test_*.py"
log_cli = true
log_level = "DEBUG"
testpaths = [
    "app"
]
